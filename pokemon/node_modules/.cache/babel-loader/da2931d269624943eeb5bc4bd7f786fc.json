{"ast":null,"code":"function merge() {\n  var result = {};\n\n  for (var i = 0; i < arguments.length; i++) {\n    var attributes = arguments[i];\n\n    for (var key in attributes) {\n      result[key] = attributes[key];\n    }\n  }\n\n  return result;\n}\n\nvar hardtack = {\n  set: function set(name, value) {\n    var options = merge(arguments[2]);\n    var attributes = Object.keys(options).map(function (optionName) {\n      var optionValue = options[optionName];\n\n      if (optionValue === true) {\n        return ';' + optionName;\n      }\n\n      var finalOptionName = optionName === 'maxAge' ? 'max-age' : optionName;\n      var finalOptionValue = ('' + optionValue).split(';')[0];\n      return ';' + finalOptionName + '=' + finalOptionValue;\n    }).join('');\n    return document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value) + attributes;\n  },\n  get: function get(name) {\n    var _document = document,\n        cookie = _document.cookie;\n\n    if (!cookie) {\n      return name ? undefined : {};\n    }\n\n    var parsedCookie = cookie.split('; ').reduce(function (accumulator, item) {\n      var cookieItem = item.split('=');\n      var cookieName = decodeURIComponent(cookieItem[0]);\n      var cookieValue = decodeURIComponent(cookieItem[1]);\n      accumulator[cookieName] = cookieValue;\n      return accumulator;\n    }, {});\n    return name ? parsedCookie[name] : parsedCookie;\n  },\n  remove: function remove(name) {\n    var options = merge(arguments[1], {\n      expires: 'Thu, 01 Jan 1970 00:00:01 GMT'\n    });\n    return this.set(name, '', options);\n  }\n};\nexport default hardtack;","map":null,"metadata":{},"sourceType":"module"}
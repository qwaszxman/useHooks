function merge() {
  var result = {};

  for (var i = 0; i < arguments.length; i++) {
    var attributes = arguments[i];

    for (var key in attributes) {
      result[key] = attributes[key];
    }
  }

  return result;
}

var hardtack = {
  set: function set(name, value) {
    var options = merge(arguments[2]);

    var attributes = Object.keys(options).map(function (optionName) {
      var optionValue = options[optionName];

      if (optionValue === true) {
        return ';' + optionName;
      }

      var finalOptionName = optionName === 'maxAge' ? 'max-age' : optionName;
      var finalOptionValue = ('' + optionValue).split(';')[0];

      return ';' + finalOptionName + '=' + finalOptionValue;
    }).join('');

    return document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value) + attributes;
  },
  get: function get(name) {
    var _document = document,
        cookie = _document.cookie;


    if (!cookie) {
      return name ? undefined : {};
    }

    var parsedCookie = cookie.split('; ').reduce(function (accumulator, item) {
      var cookieItem = item.split('=');
      var cookieName = decodeURIComponent(cookieItem[0]);
      var cookieValue = decodeURIComponent(cookieItem[1]);

      accumulator[cookieName] = cookieValue;

      return accumulator;
    }, {});

    return name ? parsedCookie[name] : parsedCookie;
  },
  remove: function remove(name) {
    var options = merge(arguments[1], {
      expires: 'Thu, 01 Jan 1970 00:00:01 GMT'
    });

    return this.set(name, '', options);
  }
};

export default hardtack;
